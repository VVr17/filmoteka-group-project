{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/classes/Gallery.js","src/js/classes/spinner.js","src/js/classes/Notify.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\nimport './js/classes/Pagination';\n\nimport './js/buttonUp';\nimport './js/changeTheme';\nimport './js/gallery';\nimport './js/modal';\nimport './js/teamAccordion';\n","import ApiService from './classes/ApiService';\nimport Gallery from './classes/Gallery';\nimport GalleryHandler from './classes/GalleryHandler';\nimport { localStorageFilms } from './classes/ModalBtn';\nimport Pagination from './classes/Pagination';\nimport Spinner from './classes/spinner';\nimport template from '../templates/movieCard.hbs';\nimport { NOTIFY_UNCORRECT_SEARCH } from './utils/config';\nimport { containerGallery, containerPag, searchFormRef } from './utils/refs';\nimport Notify from './classes/Notify';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst gallery = new Gallery(containerGallery, template);\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner();\n\nconst notify = new Notify();\n\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\n\npagination.on('aftermove', event => {\n  if (!gallery.currentQuery) {\n    fetchMovies(event.page);\n  } else {\n    searchMovies(gallery.currentQuery, event.page);\n  }\n});\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    // console.log('Popular Movies:', movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchValue = e.target.elements.search.value.trim();\n  if (searchMovies(searchValue)) {\n    //Search form input clear\n    this.reset();\n  }\n}\n\nasync function searchMovies(query, page = 1) {\n  try {\n    const searchedMovies = await gallery.getQueryMovies(query, page);\n\n    if (!searchedMovies) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    if (searchedMovies.total_results === 0) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    // console.log('Searched Movies:', searchedMovies);\n    notify.notifySuccess();\n    gallery.renderCards(searchedMovies.results);\n\n    pagination.updateTotalItems(searchedMovies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction searchNotification(message) {\n  searchFormRef.dataset.message = message;\n  notify.notifyFailure();\n\n  setTimeout(() => {\n    searchFormRef.dataset.message = '';\n  }, 4000);\n}\n\nexport { apiService, gallery };\n","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\nimport { headerRef } from '../utils/refs';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n  }\n\n  async getPopularMovies(page) {\n    this.genres = await api.fetchGenres();\n    const response = await api.fetchTrendingMovies(page);\n\n    return response.data;\n  }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    headerRef.scrollIntoView(top);\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n\n  async getQueryMovies(query, page = 1) {\n    this.currentQuery = query;\n\n    if (query === '') {\n      return;\n    }\n    const response = await api.getMoviesByName(query, page);\n    return response;\n  }\n\n  async getMovieDetails(id) {\n    if (!id) {\n      return;\n    }\n    const response = await api.fetchMoviesByID(id);\n    return response;\n  }\n}\n\nexport { checkMovies };\n","import { spinnerRef } from '../utils/refs';\n\nexport default class Spinner {\n  constructor() {\n    this.spinnerRef = spinnerRef;\n    this.hidden = true;\n  }\n\n  hide() {\n    this.spinnerRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.spinnerRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n","export default class Notify {\n  #MessageSuccess = 'Search result is successful!';\n  #MessageFailure =\n    'Search result is unsuccessful. Enter the movie name and try again!';\n  note = document.querySelector('.notify');\n  #checkerFail = true;\n  #checkerSuccess = true;\n\n  constructor() {}\n\n  notifyFailure() {\n    if (this.#checkerFail) {\n      this.#checkerFail = false;\n      this.note.classList.add('failure');\n      this.note.classList.remove('invisible', 'success');\n      this.note.innerHTML = `${this.#MessageFailure}`;\n\n      setTimeout(() => {\n        if (this.#checkerSuccess) {\n          this.note.classList.add('invisible');\n        }\n      }, 3000);\n      setTimeout(() => {\n        this.#checkerFail = true;\n        if (this.#checkerSuccess) {\n          this.note.classList.remove('failure');\n          this.note.innerHTML = '';\n        }\n      }, 4000);\n    }\n  }\n\n  notifySuccess() {\n    if (this.#checkerSuccess) {\n      this.#checkerSuccess = false;\n      this.note.classList.add('success');\n      this.note.classList.remove('invisible', 'failure');\n      this.note.innerHTML = `${this.#MessageSuccess}`;\n\n      setTimeout(() => {\n        if (this.#checkerFail) {\n          this.note.classList.add('invisible');\n        }\n      }, 3000);\n      setTimeout(() => {\n        this.#checkerSuccess = true;\n        if (this.#checkerFail) {\n          this.note.classList.remove('success');\n          this.note.innerHTML = '';\n        }\n      }, 4000);\n    }\n  }\n}\n"],"names":["parcelRequire","$6mZGd","$jkMrE","$a8683d1718c80364$var$api","default","$a8683d1718c80364$export$db62333b1da702b9","$8WKcv","$a8683d1718c80364$var$_galleryContainer","WeakMap","$a8683d1718c80364$var$_cardsTemplate","$bGr86","$5f0f9dbc150dcce1$var$_MessageSuccess","$5f0f9dbc150dcce1$var$_MessageFailure","$5f0f9dbc150dcce1$var$_checkerFail","$5f0f9dbc150dcce1$var$_checkerSuccess","$6nUKJ","addGalleryHandler","$7c59f4ec4043ce00$export$b21c1b4271bdbe93","async","page","this","genres","fetchGenres","fetchTrendingMovies","data","renderCards","movies","update","$parcel$interopDefault","innerHTML","call","library","headerRef","scrollIntoView","top","$cEPyp","localStorageFilms","addItemsOnCurrentPage","query","currentQuery","getMoviesByName","id","fetchMoviesByID","constructor","container","template","$g6yUq","containerGallery","$hMpod","$7c59f4ec4043ce00$var$pagination","$9M0Rn","containerPag","$7c59f4ec4043ce00$var$spinner","hide","spinnerRef","classList","add","hidden","show","remove","$7c59f4ec4043ce00$var$notify","notifyFailure","note","setTimeout","notifySuccess","$iJYdK","document","querySelector","$7c59f4ec4043ce00$var$fetchMovies","getPopularMovies","results","updateTotalItems","total_results","goToPage","render","error","console","$7c59f4ec4043ce00$var$searchMovies","searchedMovies","getQueryMovies","$7c59f4ec4043ce00$var$searchNotification","$hXrWV","NOTIFY_UNCORRECT_SEARCH","log","message","searchFormRef","dataset","addEventListener","e","preventDefault","target","elements","search","value","trim","reset","on","event","saveItemsForArrayAfterReload"],"version":3,"file":"index.26bf3e4e.js.map"}