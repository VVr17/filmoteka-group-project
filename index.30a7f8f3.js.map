{"mappings":"iiBAEAA,EAAA,S,sBCFA,IAAAC,EAAAD,EAAA,S,oDCAAE,EAAAF,EAAA,S,aAAeG,ECAZ,W,sBDAkBC,EACPC,G,aACVC,KAAKC,UAAYC,SAASC,cAAcJ,GACxCC,KAAKI,QAAS,C,iBAGhBC,IAAA,O,MAAA,WACEL,KAAKC,UAAUK,UAAUC,IAAI,aAC7BP,KAAKI,QAAS,C,IAGhBC,IAAA,O,MAAA,WACEL,KAAKC,UAAUK,UAAUE,OAAO,aAChCR,KAAKI,QAAS,C,OCbf,G,oDFYgB,IAAI,EAAAK,EAAAC,UACA,IAAI,EAAAC,EAAAD,UACZE,oBAEf,IAAMC,EAAmBX,SAASC,cAAc,eAC1CW,EAAU,IAAI,EAAAC,EAAAL,SAAQG,EAAkBG,EAAAN,SAExCO,EAAef,SAASC,cAAc,QACtCe,EAAa,IAAI,EAAAC,EAAAT,SAAWO,GAC5BG,EAAU,IAAIvB,EAAQ,eAGtBwB,EAAgBnB,SAASC,cAAc,gB,SAqB9BmB,I,OAAAC,EAAWC,MAAAxB,KAAAyB,U,UAAXF,I,OAAAA,EAAfG,EAAA/B,EAAA,CAAA+B,EAAAC,GAAAC,MAAA,SAAAC,I,IAA2BC,EAGjBC,EAAMC,EAAAP,U,yEAHWK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,EAChCZ,EAAQc,O,kBAEepB,EAAQqB,iBAAiBL,G,OAAxCC,EAAMK,EAAAC,KACZjB,EAAQkB,OAERxB,EAAQyB,YAAYR,EAAOS,SAE3BtB,EAAWuB,iBAAiBV,EAAOW,eACnCxB,EAAWyB,SAASb,GACpBZ,EAAW0B,S,kDAEXC,QAAQC,MAAKV,EAAAW,I,0DAZFxB,EAAWC,MAAAxB,KAAAyB,U,UAgCXuB,EAAaC,G,OAAbC,EAAY1B,MAAAxB,KAAAyB,U,UAAZyB,I,OAAAA,EAAfxB,EAAA/B,EAAA,CAAA+B,EAAAC,GAAAC,MAAA,SAAAC,EAA4BoB,G,IAAOnB,EAEzBqB,EAAcnB,EAAAP,U,yEAFWK,EAAAE,EAAAC,OAAA,YAAAD,EAAA,GAAQA,EAAA,GAAD,E,kBAETlB,EAAQsC,oBAAoBH,EAAOnB,G,UAA1DqB,EAAcf,EAAAC,KAED,C,sBACjBgB,EAAmBC,EAAAC,yBACnBjC,I,6BAImC,IAAjC6B,EAAeT,cAAmB,C,uBACpCW,EAAmBC,EAAAC,yBACnBjC,I,2BAIFuB,QAAQW,IAAI,mBAAoBL,GAChCrC,EAAQyB,YAAYY,EAAeX,SAEnCtB,EAAWuB,iBAAiBU,EAAeT,eAC3CxB,EAAWyB,SAASb,GACpBZ,EAAW0B,S,kDAEXC,QAAQW,IAAGpB,EAAAW,I,0DAvBAG,EAAY1B,MAAAxB,KAAAyB,U,CA6B3B,SAAS4B,EAAmBI,GAC1BpC,EAAcqC,QAAQD,QAAUA,EAEhCE,YAAW,WACTtC,EAAcqC,QAAQD,QAAU,E,GAC/B,I,CAtFLpC,EAAcuC,iBAAiB,UAwC/B,SAA4BC,GAC1BA,EAAEC,iBAGEd,EADgBa,EAAEE,OAAOC,SAASC,OAAOC,MAAMC,SAGjDnE,KAAKoE,O,IA5CTlD,EAAWmD,GAAG,aAAa,SAAAC,GACpBxD,EAAQyD,aAGXvB,EAAalC,EAAQyD,aAAcD,EAAMxC,MAFzCR,EAAYgD,EAAMxC,K,IAOtB0C,EAAAC,kBAAkBC,+BAOlBpD,I","sources":["src/index.js","src/js/gallery.js","src/js/classes/spinner.js","<<jsx-config-pragma.js>>"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\n\n//TEST CODE\n// import './js/temp/test-watched-obj';\n//TEST CODE\n\nimport './js/classes/Pagination';\n\nimport './js/modal';\nimport './js/gallery';\nimport './js/teamAccordion';\n","import Pagination from './classes/Pagination';\nimport ApiService from './classes/ApiService';\nimport GalleryHandler from './classes/GalleryHandler';\nimport Spinner from './classes/spinner';\nimport Gallery from './classes/Gallery';\nimport template from '../templates/movieCard.hbs';\nimport { localStorageFilms } from './classes/ModalBtn';\n\n//ANTON\"S CODE=======================================\nimport { NOTIFY_UNCORRECT_SEARCH } from './utils/config';\n//ANTON\"S CODE=======================================\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst containerGallery = document.querySelector('.js-gallery');\nconst gallery = new Gallery(containerGallery, template);\n\nconst containerPag = document.querySelector('.pag');\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner('.js-spinner');\n\n//NEW CODE=============================================\nconst searchFormRef = document.querySelector('.search-form');\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\n\npagination.on('aftermove', event => {\n  if (!gallery.currentQuery) {\n    fetchMovies(event.page);\n  } else {\n    searchMovies(gallery.currentQuery, event.page);\n  }\n});\n//NEW CODE=============================================\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\n// pagination.on('aftermove', event => {\n//   console.log(event.page);\n//   fetchMovies(event.page);\n// });\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    // console.log('Popular Movies:', movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/*\n      NEW CODE =============================================\n*/\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchValue = e.target.elements.search.value.trim();\n  if (searchMovies(searchValue)) {\n    //Search form input clear\n    this.reset();\n  }\n}\n\n//------------------------------------------------------------------\n\nasync function searchMovies(query, page = 1) {\n  try {\n    const searchedMovies = await gallery.getQueryMoviesANTON(query, page);\n\n    if (!searchedMovies) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    if (searchedMovies.total_results === 0) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    console.log('Searched Movies:', searchedMovies);\n    gallery.renderCards(searchedMovies.results);\n\n    pagination.updateTotalItems(searchedMovies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//------------------------------------------------------------------\n\nfunction searchNotification(message) {\n  searchFormRef.dataset.message = message;\n\n  setTimeout(() => {\n    searchFormRef.dataset.message = '';\n  }, 4000);\n}\n\n/*\n      NEW CODE =============================================\n*/\n\nexport { apiService, gallery };\n","export default class Spinner {\n  constructor(selector) {\n    this.buttonRef = document.querySelector(selector);\n    this.hidden = true;\n  }\n\n  hide() {\n    this.buttonRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.buttonRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n",null],"names":["parcelRequire","$bpxeT","$8MBJY","$f0689d5ef78736c7$export$2e2bcd8739ae039","Spinner","selector","this","buttonRef","document","querySelector","hidden","key","classList","add","remove","$bKaad","default","$7MumP","addGalleryHandler","$6756f0db6f988caf$var$containerGallery","$6756f0db6f988caf$export$b21c1b4271bdbe93","$gOExu","$85dma","$6756f0db6f988caf$var$containerPag","$6756f0db6f988caf$var$pagination","$fc6Dh","$6756f0db6f988caf$var$spinner","$6756f0db6f988caf$var$searchFormRef","$6756f0db6f988caf$var$fetchMovies","$6756f0db6f988caf$var$_fetchMovies","apply","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","page","movies","_args","length","show","getPopularMovies","_ctx","sent","hide","renderCards","results","updateTotalItems","total_results","goToPage","render","console","error","t0","$6756f0db6f988caf$var$searchMovies","query","$6756f0db6f988caf$var$_searchMovies","searchedMovies","getQueryMoviesANTON","$6756f0db6f988caf$var$searchNotification","$iqi4A","NOTIFY_UNCORRECT_SEARCH","log","message","dataset","setTimeout","addEventListener","e","preventDefault","target","elements","search","value","trim","reset","on","event","currentQuery","$8Seta","localStorageFilms","saveItemsForArrayAfterReload"],"version":3,"file":"index.30a7f8f3.js.map"}