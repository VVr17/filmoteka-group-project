{"mappings":"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","sources":["src/index.js","src/js/classes/SearchingForm.js","src/js/searchingForm.js","src/js/gallery.js","src/js/classes/ApiService.js","src/js/classes/Gallery.js","src/js/classes/spinner.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\n\n//Anton's temporary test code----------------------------\nimport './js/temp/antonTempTest';\n//Anton's temporary test code----------------------------\n\nimport './js/classes/HeaderBtnHandler';\nimport './js/classes/SearchingForm';\n\nimport './js/filter';\nimport './js/modal';\nimport './js/searchingForm';\nimport './js/gallery';\nimport './js/teamAccordion';\n","const axios = require('axios').default;\n\nexport default class SearchingForm {\n  #API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\n  #BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  #searchParams = {\n    params: {\n      api_key: this.#API_KEY,\n      query: '',\n      // page: 1,\n      include_adult: false,\n    },\n  };\n  constructor() {}\n\n  async searchMovies(query) {\n    try {\n      const response = await axios.get(this.#BASE_URL, this.#searchParams);\n      return response;\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  async getMovies(query, page) {\n    if (query) {\n      this.#searchParams.params.query = query;\n      this.#searchParams.params.page = page;\n    }\n    const response = await this.searchMovies();\n    console.log(response);\n    return response;\n  }\n}\n","import SearchingForm from './classes/SearchingForm';\n\nconst searchingFormRef = document.querySelector('.search-form');\nconst inputRef = document.querySelector('.search-input');\n\nsearchingFormRef?.addEventListener('submit', onSearchSubmit);\n\nconst formSearch = new SearchingForm();\n\nfunction onSearchSubmit(event) {\n  event.preventDefault();\n\n  let searchValue = inputRef.value;\n  searchValue.trim();\n\n  formSearch.searchMovies('Killer');\n  if (searchValue == '') {\n    searchingFormRef.dataset.message =\n      'Search attempt not successful. Please, enter movie name.';\n    //\n\n    setTimeout(() => {\n      searchingFormRef.dataset.message = '';\n    }, 5500);\n    return;\n  }\n\n  formSearch.getMovies(searchValue, 1);\n}\n","import Pagination from './classes/Pagination';\nimport ApiService from './classes/ApiService';\nimport GalleryHandler from './classes/GalleryHandler';\nimport Spinner from './classes/spinner';\nimport Gallery from './classes/Gallery';\nimport template from '../templates/movieCard.hbs';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst containerGallery = document.querySelector('.js-gallery');\nconst gallery = new Gallery(containerGallery, template);\n\nconst containerPag = document.querySelector('.pag');\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner('.js-spinner');\n\npagination.on('aftermove', event => {\n  console.log(event.page);\n\n  fetchMovies(event.page);\n});\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    console.log(movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { apiService, gallery };\n","const axios = require('axios').default;\n\nexport default class ApiService {\n  #API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\n  //змінити базовий юрл\n  #BASE_GENRES_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n  #BASE_TRENDS_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  #BASE_BY_NAME_URL = 'https://api.themoviedb.org/3/search/movie';\n \n  #moviesByNameSearchParams = {\n    params: {\n      api_key: this.#API_KEY,\n      query: '',\n      page: 1,\n      include_adult: false,\n    },\n  };\n  #genresSearchParams = {\n    params: {\n      api_key: this.#API_KEY,\n    },\n  };\n  constructor() {}\n\n  async fetchGenres() {\n    try {\n      const response = await axios.get(\n        this.#BASE_GENRES_URL,\n        this.#genresSearchParams\n      );\n      const genres = response.data.genres;\n      return genres;\n      // for (const genre of genres) {\n      //   console.log(genre.id);\n      //   console.log(genre.name);\n      //   localStorage.setItem(genre.id, genre.name);\n      // }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async fetchTrendingMovies(page =1) {\n    const  popularMoviesSearchParams = {\n      params: { api_key: this.#API_KEY, page },\n    };\n    try {\n      const response = await axios.get(\n        this.#BASE_TRENDS_URL,\n        popularMoviesSearchParams\n      );\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async fetchMoviesByName() {\n    try {\n      const response = await axios.get(\n        this.#BASE_BY_NAME_URL,\n        this.#moviesByNameSearchParams\n      );\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // async getPopularMovies() {\n  //   try {\n  //     const response = await this.fetchTrendingMovies();\n  //     return response.data;\n  //   }\n  //   catch (error) {\n  //     console.error(error);\n  //   }\n  // }\n\n  async getMoviesByName(query) {\n    if (query) {\n      this.#moviesByNameSearchParams.query = query;\n      this.#moviesByNameSearchParams.page = 1;\n    }\n    const response = await this.fetchMoviesByName();\n    return response.data.results;\n  }\n\n}\n","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n  }\n\n  // render на головну сторінку\n  // render на кожну наступну сторінку\n\n  async getPopularMovies(page) {\n    this.genres = await api.fetchGenres();\n    const response = await api.fetchTrendingMovies(page);\n\n    return response.data;\n  }\n\n  // moviesDataUpdate(genres, movies) {\n  //   movies.forEach(movie => {\n  //     //Movies genres check\n  //     movie.genres = [];\n  //     for (let i = 0; i < movie.genre_ids.length; i++) {\n  //       if (i === 3) {\n  //         movie.genres[i - 1] = 'Others';\n  //         break;\n  //       }\n  //       movie.genres.push(getGenreNameById(genres, movie.genre_ids[i]));\n  //     }\n\n  //     //Year check\n  //     if (movie.release_date) {\n  //       movie.date = movie.release_date;\n  //     }\n\n  //     //Images check\n  //     if (movie.poster_path && movie.poster_path !== '') {\n  //       const imageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  //       movie.poster_path = imageBaseUrl + movie.poster_path;\n  //     }\n  //     else {\n  //       const imgUrl = new URL(\n  //         '../../images/movie-card-plug.jpg',\n  //         import.meta.url\n  //       );\n  //       movie.poster_path = imgUrl;\n  //     }\n  //   });\n  // }\n\n  // getGenreNameById(genres, genreId) {\n  //   return genres.find(genre => genre.id === genreId).name;\n  // }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n}\n","export default class Spinner {\n  constructor(selector) {\n    this.buttonRef = document.querySelector(selector);\n    this.hidden = true;\n  }\n\n  hide() {\n    this.buttonRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.buttonRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n\n// const spinner = new Spinner('.js-spinner');\n"],"names":["parcelRequire","$jkMrE","default","$192827e210a0018a$var$_API_KEY","WeakMap","$192827e210a0018a$var$_BASE_URL","$192827e210a0018a$var$_searchParams","$1c7442b436582821$var$searchingFormRef","document","querySelector","$1c7442b436582821$var$inputRef","addEventListener","event","preventDefault","searchValue","value","trim","$1c7442b436582821$var$formSearch","searchMovies","dataset","message","setTimeout","getMovies","async","query","$192827e210a0018a$require$axios","get","$parcel$interopDefault","this","error","page","params","response","console","log","constructor","$g6yUq","api_key","include_adult","$9M0Rn","$013265bfe0f147b6$var$_API_KEY","$013265bfe0f147b6$var$_BASE_GENRES_URL","$013265bfe0f147b6$var$_BASE_TRENDS_URL","$013265bfe0f147b6$var$_BASE_BY_NAME_URL","$013265bfe0f147b6$var$_moviesByNameSearchParams","$013265bfe0f147b6$var$_genresSearchParams","$013265bfe0f147b6$export$2e2bcd8739ae039","$013265bfe0f147b6$require$axios","data","genres","popularMoviesSearchParams","fetchMoviesByName","results","$a8683d1718c80364$var$api","$a8683d1718c80364$var$checkMovies","$8WKcv","$a8683d1718c80364$var$_galleryContainer","$a8683d1718c80364$var$_cardsTemplate","$6nUKJ","addGalleryHandler","$7c59f4ec4043ce00$var$containerGallery","$7c59f4ec4043ce00$export$b21c1b4271bdbe93","fetchGenres","fetchTrendingMovies","renderCards","movies","update","innerHTML","call","library","$cEPyp","localStorageFilms","addItemsOnCurrentPage","container","template","currentQuery","$hMpod","$7c59f4ec4043ce00$var$containerPag","$7c59f4ec4043ce00$var$pagination","$7c59f4ec4043ce00$var$spinner","hide","buttonRef","classList","add","hidden","show","remove","selector","$7c59f4ec4043ce00$var$fetchMovies","getPopularMovies","updateTotalItems","total_results","render","on"],"version":3,"file":"index.c7a8da2f.js.map"}