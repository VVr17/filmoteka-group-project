{"mappings":"qhBAGAA,EAAA,S,iCCHA,IAAAC,EAAAD,EAAA,S,aCAAC,EAAAD,EAAA,S,iBCyBIE,EAvByBC,EADzBH,EAAA,UACoCI,SAAS,CAAC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAC7F,IAAIC,EAAQC,EAAiB,MAAVL,EAAiBA,EAAUD,EAAUO,aAAe,GAAKC,EAAOR,EAAUS,MAAMC,cAAeC,EAAO,WAAYC,EAAOZ,EAAUa,iBAAkBC,EAAiBd,EAAUc,gBAAkB,SAASC,EAAQC,GAClO,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,EAKtB,MAAO,mBACHJ,SAAQP,EAAgH,OAArGA,EAASS,EAAeZ,EAAQ,QAAoB,MAAVD,EAAiBa,EAAeb,EAAO,MAAQA,IAAmBI,EAASG,KAA2BG,EAASN,EAAOe,KAAKd,EAAO,CAACe,KAAO,KAAKC,KAAO,GAAGlB,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAASrB,GAC1S,IACAO,SAAQP,EAAoH,OAAzGA,EAASS,EAAeZ,EAAQ,UAAsB,MAAVD,EAAiBa,EAAeb,EAAO,QAAUA,IAAmBI,EAASG,KAA2BG,EAASN,EAAOe,KAAKd,EAAO,CAACe,KAAO,OAAOC,KAAO,GAAGlB,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAASrB,GAChT,a,EACJuB,SAAW,CAAC,EAAE,YAAYC,KAAO,SAAS7B,EAAUC,EAAOC,EAAQC,EAASC,GAC1E,IAAI0B,EAON,OAA8R,OAArRA,GAPsB9B,EAAUc,gBAAkB,SAASC,EAAQC,GACtE,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,GAKWd,EAAQ,QAAQkB,KAAe,MAAVnB,EAAiBA,EAAUD,EAAUO,aAAe,GAAIN,EAAO,CAACoB,KAAO,OAAOC,KAAO,GAAGS,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,GAAGC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAAiBI,EAAS,E,EAC9SK,SAAU,I,8BCJRC,EAlByBtC,EADzBH,EAAA,UACoCI,SAAS,CAAC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAC7F,IAAIE,EAAON,EAAUqC,OAAQ7B,EAAOR,EAAUa,iBAEhD,MAAO,mBACHL,EAAOF,EAAOL,EAAQA,IACtB,IACAO,EAAOF,EAAOL,EAAQA,IACtB,a,EACJ2B,SAAW,CAAC,EAAE,YAAYC,KAAO,SAAS7B,EAAUC,EAAOC,EAAQC,EAASC,GAC1E,IAAI0B,EAON,OAA8R,OAArRA,GAPsB9B,EAAUc,gBAAkB,SAASC,EAAQC,GACtE,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,GAKWd,EAAQ,QAAQkB,KAAe,MAAVnB,EAAiBA,EAAUD,EAAUO,aAAe,GAAIN,EAAO,CAACoB,KAAO,OAAOC,KAAO,GAAGS,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,GAAGC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAAiBI,EAAS,E,EAC9SK,SAAU,IFPA,IAAI,EAAAvC,EAAA0C,SACgB,IAAI,EAAAC,EAAAD,SAAWE,EAAAC,cGb/C,IAAAC,EAAA/C,EAAA,S,gFAKA,MAAMgD,EAAM,IAAI,EAAA/C,EAAA0C,SACVM,EAAc,IAAI,EAAAC,EAAAP,S,IAGtBQ,EAAiB,IAAAC,QACjBC,EAAc,IAAAD,Q,uECVhBP,EAAA7C,EAAA,S,iBLkBA,MAAMsD,EAAa,IAAI,EAAArD,EAAA0C,UACA,IAAI,EAAAY,EAAAZ,UACZa,oBAEf,MAAMC,EAAU,IIdD,MAYbC,uBAAuBC,GAChBC,KAAKC,SACRD,KAAKC,aAAeb,EAAIc,cACxBC,EAAAC,kBAAkBC,UAAUL,KAAKC,SAInC,aADuBb,EAAIkB,oBAAoBP,IAC/BlD,I,CAGlB0D,YAAYC,GACVnB,EAAYoB,OAAOD,EAAQR,KAAKC,QAChC1D,EAAA4C,EAAA,CAAAa,KAAMT,GAAiBmB,UAAYnE,EAAA4C,EAAA,CAAAa,KAAMP,GAAa5B,KAAnBmC,KAAoB,C,OACrDQ,EACAG,SAAS,IAEX1B,EAAA2B,UAAUC,eAAeC,KACzBX,EAAAC,kBAAkBW,sBAAsBP,E,CAG1CV,qBAAqBkB,EAAOjB,EAAO,GAGjC,GAFAC,KAAKiB,aAAeD,GAEfA,EAAO,OAGZ,aADuB5B,EAAI8B,gBAAgBF,EAAOjB,E,CAIpDD,sBAAsBqB,GACpB,IAAKA,EAAI,OAGT,aADuB/B,EAAIgC,gBAAgBD,E,CAxC7CE,YAAY5E,EAAWD,GAHvBD,EAAA+E,EAAA,CAAAtB,KAAAT,EAAiB,C,uBAAjB,IACAhD,EAAA+E,EAAA,CAAAtB,KAAAP,EAAc,C,uBAAd,I,UAGQF,EAAmB9C,G,UACnBgD,EAAgBjD,GACtBwD,KAAKiB,aAAe,GACpBjB,KAAKC,OAAS,KACdD,KAAKuB,kBAAmB,C,GJKAtC,EAAAuC,iBAAkBC,EAAA1C,SACxC2C,EAAa,IAAI,EAAA1C,EAAAD,SAAWE,EAAAC,cAC5ByC,EAAU,IKtBD,MAMbC,OACE5B,KAAK6B,WAAWC,UAAUC,IAAI,aAC9B/B,KAAKgC,QAAS,C,CAGhBC,OACEjC,KAAK6B,WAAWC,UAAUI,OAAO,aACjClC,KAAKgC,QAAS,C,CAZhBX,cACErB,KAAK6B,WAAa5C,EAAA4C,WAClB7B,KAAKgC,QAAS,C,GLqBZG,EAAS,IAAI,EAAAC,EAAArD,SACbsD,EAAS,ICZR,MAOLC,eACE,MAAMrC,EAASE,EAAAC,kBAAkBmC,sBAC/BpC,EAAAC,kBAAkBoC,mBAAmBvC,QAEvChB,EAAAwD,eAAeC,mBAAmB,YAAapG,EAAc2D,IAE7D,MAAM0C,EAAQ,GACd,IAAK,IAAIC,EAAO,KAAMA,GAAQ,KAAMA,GAAQ,EAC1CD,EAAME,KAAKD,GAEb3D,EAAA6D,cAAcJ,mBAAmB,YAAa7D,EAAa8D,IAE3D3C,KAAK+C,SAAU,C,CAGjBC,WAAWC,GACThE,EAAAiE,cAAcC,iBAAiB,SAAUF,E,CAtB3C5B,cACErB,KAAK+C,SAAU,EACf/C,KAAKoD,QAAU,KACfpD,KAAK4C,KAAO,I,GD2BhB9C,eAAeuD,EAAYtD,EAAO,GAChC4B,EAAQM,OACR,IACE,MAAMzB,QAAeX,EAAQyD,iBAAiBvD,GAC9C4B,EAAQC,OAER/B,EAAQU,YAAYC,EAAO+C,SAE3B7B,EAAW8B,iBAAiBhD,EAAOiD,eACnC/B,EAAWgC,SAAS3D,GACpB2B,EAAWiC,SACPtB,EAAOU,SAASV,EAAOC,c,CAC3B,MAAOsB,GACPC,QAAQD,MAAMA,E,EAkBlB9D,eAAegE,EAAa9C,EAAOjB,EAAO,GACxC,IACE,MAAMgE,QAAuBlE,EAAQmE,eAAehD,EAAOjB,GAE3D,IAAKgE,IAAmBA,EAAeN,cAGrC,OAFmBQ,EAAAC,wBAmBvB/B,EAAOgC,qBAlBHd,IAKFlB,EAAOiC,gBACPvE,EAAQU,YAAYwD,EAAeR,SAEnC7B,EAAW8B,iBAAiBO,EAAeN,eAC3C/B,EAAWgC,SAAS3D,GACpB2B,EAAWiC,Q,CACX,MAAOC,GACPC,QAAQQ,IAAIT,E,EAgChB9D,eAAewE,EAA2BvE,GACxC,IACE,MAAMwE,QAAuB7E,EAAW8E,oBACtCnC,EAAOe,QACPf,EAAOO,KACP7C,GAEFF,EAAQU,YAAYgE,EAAehB,SAEnC7B,EAAW8B,iBAAiBe,EAAed,eAC3C/B,EAAWgC,SAAS3D,GACpB2B,EAAWiC,Q,CACX,MAAOC,GACPC,QAAQQ,IAAIT,E,EAhHhBvB,EAAOW,YAgFP,SAAgCyB,GAC9BA,EAAMC,iBACN7E,EAAQoB,aAAe,GACvB,MAAM0D,MAAEA,EAAK/B,KAAEA,GAAS6B,EAAMG,cAAcC,SAC5CxC,EAAOe,SAAWuB,EAAMG,MACxBzC,EAAOO,MAAQA,EAAKkC,OAEG,IAAnBzC,EAAOe,SAAiC,IAAhBf,EAAOO,QACjC/C,EAAQ0B,kBAAmB,EAC3B+C,EAA2B,IAG7B,IAAKjC,EAAOe,UAAYf,EAAOO,KAG7B,OAFA/C,EAAQ0B,kBAAmB,OAC3B8B,G,IA5FJpE,EAAA8F,cAAc5B,iBAAiB,UAiC/B,SAA4B6B,GAC1BA,EAAEN,iBAGEZ,EADgBkB,EAAEC,OAAOJ,SAASK,OAAOJ,MAAMK,SAGjDnF,KAAKoF,QAGPnG,EAAAwD,eAAeqC,MAAQ,EACvB7F,EAAA6D,cAAcgC,MAAQ,EACtBjF,EAAQ0B,kBAAmB,C,IA1C7BG,EAAW2D,GAAG,aAAaZ,IACpB5E,EAAQoB,cAAiBpB,EAAQ0B,kBACpC8B,EAAYoB,EAAM1E,MAEhBF,EAAQoB,cAAc6C,EAAajE,EAAQoB,aAAcwD,EAAM1E,MAC/DF,EAAQ0B,kBACV+C,EAA2BG,EAAM1E,KAAK,IAI1CI,EAAAC,kBAAkBkF,+BAElBjC,I","sources":["src/index.js","src/js/gallery.js","src/js/classes/Filter.js","src/templates/genre.hbs","src/templates/year.hbs","src/js/classes/Gallery.js","src/js/classes/spinner.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\n\nimport './js/utils/handlebars-helpers';\nimport './js/classes/Pagination';\n\nimport './js/buttonUp';\nimport './js/changeTheme';\nimport './js/gallery';\nimport './js/modal';\nimport './js/teamAccordion';\nimport './js/auth';\n","import ApiService from './classes/ApiService';\nimport {\n  containerGallery,\n  containerPag,\n  searchFormRef,\n  genreSelectRef,\n  yearSelectRef,\n} from './utils/refs';\nimport { Filter } from './classes/Filter';\nimport Gallery from './classes/Gallery';\nimport GalleryHandler from './classes/GalleryHandler';\nimport { localStorageFilms } from './classes/ModalBtn';\nimport { NOTIFY_UNCORRECT_SEARCH } from './utils/config';\nimport Notify from './classes/Notify';\nimport Pagination from './classes/Pagination';\nimport Spinner from './classes/spinner';\nimport template from '../templates/movieCard.hbs';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst gallery = new Gallery(containerGallery, template);\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner();\n\nconst notify = new Notify();\nconst filter = new Filter();\nfilter.addHandler(discoverMoviesByFilter);\n\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\n\npagination.on('aftermove', event => {\n  if (!gallery.currentQuery && !gallery.filterIsComplete) {\n    fetchMovies(event.page);\n  }\n  if (gallery.currentQuery) searchMovies(gallery.currentQuery, event.page);\n  if (gallery.filterIsComplete) {\n    renderMoviesByChosenFilter(event.page);\n  }\n});\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    // console.log('Popular Movies:', movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n    if (filter.isEmpty) filter.renderFilter();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchValue = e.target.elements.search.value.trim();\n  if (searchMovies(searchValue)) {\n    //Search form input clear\n    this.reset();\n  }\n  // clear filter\n  genreSelectRef.value = 0;\n  yearSelectRef.value = 0;\n  gallery.filterIsComplete = false;\n}\n\nasync function searchMovies(query, page = 1) {\n  try {\n    const searchedMovies = await gallery.getQueryMovies(query, page);\n\n    if (!searchedMovies || !searchedMovies.total_results) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    // console.log('Searched Movies:', searchedMovies);\n    notify.notifySuccess();\n    gallery.renderCards(searchedMovies.results);\n\n    pagination.updateTotalItems(searchedMovies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction searchNotification(message) {\n  // searchFormRef.dataset.message = message;\n  notify.notifyFailure();\n\n  // setTimeout(() => {\n  //   searchFormRef.dataset.message = '';\n  // }, 4000);\n}\n\nfunction discoverMoviesByFilter(event) {\n  event.preventDefault();\n  gallery.currentQuery = '';\n  const { genre, year } = event.currentTarget.elements;\n  filter.genreId = +genre.value;\n  filter.year = +year.value;\n\n  if (filter.genreId !== 0 || filter.year !== 0) {\n    gallery.filterIsComplete = true;\n    renderMoviesByChosenFilter(1);\n  }\n\n  if (!filter.genreId && !filter.year) {\n    gallery.filterIsComplete = false;\n    fetchMovies();\n    return;\n  }\n}\n\nasync function renderMoviesByChosenFilter(page) {\n  try {\n    const moviesByFilter = await apiService.fetchDiscoverMovies(\n      filter.genreId,\n      filter.year,\n      page\n    );\n    gallery.renderCards(moviesByFilter.results);\n\n    pagination.updateTotalItems(moviesByFilter.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { apiService, gallery };\n","import ApiService from './ApiService';\nimport {\n  filterFormRef,\n  genreSelectRef,\n  yearSelectRef,\n  containerPag,\n} from '../utils/refs';\nimport GenreTemplate from '../../templates/genre.hbs';\nimport { localStorageFilms } from './ModalBtn';\nimport Pagination from './Pagination';\nimport YearTemplate from '../../templates/year.hbs';\n\nconst api = new ApiService();\nexport const filterPagination = new Pagination(containerPag);\n\nexport class Filter {\n  constructor() {\n    this.isEmpty = true;\n    this.genreId = null;\n    this.year = null;\n  }\n\n  renderFilter() {\n    const genres = localStorageFilms.getItemFromKeyStorage(\n      localStorageFilms.LOCAL_STORAGE_KEYS.genres\n    );\n    genreSelectRef.insertAdjacentHTML('beforeend', GenreTemplate(genres));\n\n    const years = [];\n    for (let year = 2022; year >= 1980; year -= 1) {\n      years.push(year);\n    }\n    yearSelectRef.insertAdjacentHTML('beforeend', YearTemplate(years));\n\n    this.isEmpty = false;\n  }\n\n  addHandler(handler) {\n    filterFormRef.addEventListener('change', handler);\n  }\n}\n","{{#each this}}\n  <option value={{id}}>{{name}}</option>\n{{/each}}","{{#each this}}\n  <option value={{this}}>{{this}}</option>\n{{/each}}","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\nimport { headerRef } from '../utils/refs';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n    this.filterIsComplete = false;\n  }\n\n  async getPopularMovies(page) {\n    if (!this.genres) {\n      this.genres = await api.fetchGenres();\n      localStorageFilms.addGenres(this.genres);\n    }\n\n    const response = await api.fetchTrendingMovies(page);\n    return response.data;\n  }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    headerRef.scrollIntoView(top);\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n\n  async getQueryMovies(query, page = 1) {\n    this.currentQuery = query;\n\n    if (!query) return;\n\n    const response = await api.getMoviesByName(query, page);\n    return response;\n  }\n\n  async getMovieDetails(id) {\n    if (!id) return;\n\n    const response = await api.fetchMoviesByID(id);\n    return response;\n  }\n}\n\nexport { checkMovies };\n","import { spinnerRef } from '../utils/refs';\n\nexport default class Spinner {\n  constructor() {\n    this.spinnerRef = spinnerRef;\n    this.hidden = true;\n  }\n\n  hide() {\n    this.spinnerRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.spinnerRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n"],"names":["parcelRequire","$6mZGd","$990a422144f43bda$export$2e2bcd8739ae039","$parcel$interopDefault","template","container","depth0","helpers","partials","data","helper","alias1","nullContext","alias2","hooks","helperMissing","alias3","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","name","hash","loc","start","line","column","end","compiler","main","stack1","fn","program","inverse","noop","useData","$5589fdcaffd30d1f$export$2e2bcd8739ae039","lambda","default","$9M0Rn","$bGr86","containerPag","$jkMrE","$a8683d1718c80364$var$api","$a8683d1718c80364$export$db62333b1da702b9","$8WKcv","$a8683d1718c80364$var$_galleryContainer","WeakMap","$a8683d1718c80364$var$_cardsTemplate","$7c59f4ec4043ce00$export$d0204b1ddc8ee140","$6nUKJ","addGalleryHandler","$7c59f4ec4043ce00$export$b21c1b4271bdbe93","async","page","this","genres","fetchGenres","$cEPyp","localStorageFilms","addGenres","fetchTrendingMovies","renderCards","movies","update","innerHTML","library","headerRef","scrollIntoView","top","addItemsOnCurrentPage","query","currentQuery","getMoviesByName","id","fetchMoviesByID","constructor","$g6yUq","filterIsComplete","containerGallery","$hMpod","$7c59f4ec4043ce00$var$pagination","$7c59f4ec4043ce00$var$spinner","hide","spinnerRef","classList","add","hidden","show","remove","$7c59f4ec4043ce00$var$notify","$8a0sJ","$7c59f4ec4043ce00$var$filter","renderFilter","getItemFromKeyStorage","LOCAL_STORAGE_KEYS","genreSelectRef","insertAdjacentHTML","years","year","push","yearSelectRef","isEmpty","addHandler","handler","filterFormRef","addEventListener","genreId","$7c59f4ec4043ce00$var$fetchMovies","getPopularMovies","results","updateTotalItems","total_results","goToPage","render","error","console","$7c59f4ec4043ce00$var$searchMovies","searchedMovies","getQueryMovies","$hXrWV","NOTIFY_UNCORRECT_SEARCH","notifyFailure","notifySuccess","log","$7c59f4ec4043ce00$var$renderMoviesByChosenFilter","moviesByFilter","fetchDiscoverMovies","event","preventDefault","genre","currentTarget","elements","value","searchFormRef","e","target","search","trim","reset","on","saveItemsForArrayAfterReload"],"version":3,"file":"index.59998d22.js.map"}