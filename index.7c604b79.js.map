{"mappings":"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","sources":["src/index.js","src/js/classes/SearchingForm.js","<<jsx-config-pragma.js>>","src/js/searchingForm.js","src/js/gallery.js","src/js/classes/ApiService.js","src/js/classes/spinner.js","src/js/classes/Gallery.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\n\n//Anton's temporary test code----------------------------\nimport './js/temp/antonTempTest';\n//Anton's temporary test code----------------------------\n\nimport './js/classes/HeaderBtnHandler';\nimport './js/classes/SearchingForm';\n\nimport './js/filter';\nimport './js/modal';\nimport './js/searchingForm';\nimport './js/gallery';\nimport './js/teamAccordion';\n","const axios = require('axios').default;\n\nexport default class SearchingForm {\n  #API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\n  #BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  #searchParams = {\n    params: {\n      api_key: this.#API_KEY,\n      query: '',\n      // page: 1,\n      include_adult: false,\n    },\n  };\n  constructor() {}\n\n  async searchMovies(query) {\n    try {\n      const response = await axios.get(this.#BASE_URL, this.#searchParams);\n      return response;\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  async getMovies(query, page) {\n    if (query) {\n      this.#searchParams.params.query = query;\n      this.#searchParams.params.page = page;\n    }\n    const response = await this.searchMovies();\n    console.log(response);\n    return response;\n  }\n}\n",null,"import SearchingForm from './classes/SearchingForm';\n\nconst searchingFormRef = document.querySelector('.search-form');\nconst inputRef = document.querySelector('.search-input');\n\nsearchingFormRef?.addEventListener('submit', onSearchSubmit);\n\nconst formSearch = new SearchingForm();\n\nfunction onSearchSubmit(event) {\n  event.preventDefault();\n\n  let searchValue = inputRef.value;\n  searchValue.trim();\n\n  formSearch.searchMovies('Killer');\n  if (searchValue == '') {\n    searchingFormRef.dataset.message =\n      'Search attempt not successful. Please, enter movie name.';\n    //\n\n    setTimeout(() => {\n      searchingFormRef.dataset.message = '';\n    }, 5500);\n    return;\n  }\n\n  formSearch.getMovies(searchValue, 1);\n}\n","import Pagination from './classes/Pagination';\nimport ApiService from './classes/ApiService';\nimport GalleryHandler from './classes/GalleryHandler';\nimport Spinner from './classes/spinner';\nimport Gallery from './classes/Gallery';\nimport template from '../templates/movieCard.hbs';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst containerGallery = document.querySelector('.js-gallery');\nconst gallery = new Gallery(containerGallery, template);\n\nconst containerPag = document.querySelector('.pag');\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner('.js-spinner');\n\npagination.on('aftermove', event => {\n  console.log(event.page);\n\n  fetchMovies(event.page);\n});\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    console.log(movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { apiService, gallery };\n","const axios = require('axios').default;\n\nexport default class ApiService {\n  #API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\n  //змінити базовий юрл\n  #BASE_GENRES_URL = 'https://api.themoviedb.org/3/genre/movie/list';\n  #BASE_TRENDS_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  #BASE_BY_NAME_URL = 'https://api.themoviedb.org/3/search/movie';\n \n  #moviesByNameSearchParams = {\n    params: {\n      api_key: this.#API_KEY,\n      query: '',\n      page: 1,\n      include_adult: false,\n    },\n  };\n  #genresSearchParams = {\n    params: {\n      api_key: this.#API_KEY,\n    },\n  };\n  constructor() {}\n\n  async fetchGenres() {\n    try {\n      const response = await axios.get(\n        this.#BASE_GENRES_URL,\n        this.#genresSearchParams\n      );\n      const genres = response.data.genres;\n      return genres;\n      // for (const genre of genres) {\n      //   console.log(genre.id);\n      //   console.log(genre.name);\n      //   localStorage.setItem(genre.id, genre.name);\n      // }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async fetchTrendingMovies(page =1) {\n    const  popularMoviesSearchParams = {\n      params: { api_key: this.#API_KEY, page },\n    };\n    try {\n      const response = await axios.get(\n        this.#BASE_TRENDS_URL,\n        popularMoviesSearchParams\n      );\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async fetchMoviesByName() {\n    try {\n      const response = await axios.get(\n        this.#BASE_BY_NAME_URL,\n        this.#moviesByNameSearchParams\n      );\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // async getPopularMovies() {\n  //   try {\n  //     const response = await this.fetchTrendingMovies();\n  //     return response.data;\n  //   }\n  //   catch (error) {\n  //     console.error(error);\n  //   }\n  // }\n\n  async getMoviesByName(query) {\n    if (query) {\n      this.#moviesByNameSearchParams.query = query;\n      this.#moviesByNameSearchParams.page = 1;\n    }\n    const response = await this.fetchMoviesByName();\n    return response.data.results;\n  }\n\n}\n","export default class Spinner {\n  constructor(selector) {\n    this.buttonRef = document.querySelector(selector);\n    this.hidden = true;\n  }\n\n  hide() {\n    this.buttonRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.buttonRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n\n// const spinner = new Spinner('.js-spinner');\n","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n  }\n\n  // render на головну сторінку\n  // render на кожну наступну сторінку\n\n  async getPopularMovies(page) {\n    this.genres = await api.fetchGenres();\n    const response = await api.fetchTrendingMovies(page);\n\n    return response.data;\n  }\n\n  // moviesDataUpdate(genres, movies) {\n  //   movies.forEach(movie => {\n  //     //Movies genres check\n  //     movie.genres = [];\n  //     for (let i = 0; i < movie.genre_ids.length; i++) {\n  //       if (i === 3) {\n  //         movie.genres[i - 1] = 'Others';\n  //         break;\n  //       }\n  //       movie.genres.push(getGenreNameById(genres, movie.genre_ids[i]));\n  //     }\n\n  //     //Year check\n  //     if (movie.release_date) {\n  //       movie.date = movie.release_date;\n  //     }\n\n  //     //Images check\n  //     if (movie.poster_path && movie.poster_path !== '') {\n  //       const imageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  //       movie.poster_path = imageBaseUrl + movie.poster_path;\n  //     }\n  //     else {\n  //       const imgUrl = new URL(\n  //         '../../images/movie-card-plug.jpg',\n  //         import.meta.url\n  //       );\n  //       movie.poster_path = imgUrl;\n  //     }\n  //   });\n  // }\n\n  // getGenreNameById(genres, genreId) {\n  //   return genres.find(genre => genre.id === genreId).name;\n  // }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n}\n"],"names":["parcelRequire","$bpxeT","default","$2e558ff012a5efa8$var$_API_KEY","WeakMap","$2e558ff012a5efa8$var$_BASE_URL","$2e558ff012a5efa8$var$_searchParams","$2e558ff012a5efa8$export$2e2bcd8739ae039","SearchingForm","$parcel$interopDefault","$8MQK7","this","params","api_key","$4KMWL","query","include_adult","key","$2TvXO","mark","_callee","response","$2e558ff012a5efa8$require$axios","get","_this","_ctx","sent","page","searchMovies","console","log","$76cabe092f013cd2$var$searchingFormRef","document","querySelector","$76cabe092f013cd2$var$inputRef","addEventListener","event","preventDefault","searchValue","value","trim","$76cabe092f013cd2$var$formSearch","dataset","message","setTimeout","getMovies","$88cbdfe36d23d5ff$var$_API_KEY","$88cbdfe36d23d5ff$var$_BASE_GENRES_URL","$88cbdfe36d23d5ff$var$_BASE_TRENDS_URL","$88cbdfe36d23d5ff$var$_BASE_BY_NAME_URL","$88cbdfe36d23d5ff$var$_moviesByNameSearchParams","$88cbdfe36d23d5ff$var$_genresSearchParams","$88cbdfe36d23d5ff$export$2e2bcd8739ae039","ApiService","genres","$88cbdfe36d23d5ff$require$axios","data","error","t0","arguments","length","popularMoviesSearchParams","fetchMoviesByName","results","$f0689d5ef78736c7$export$2e2bcd8739ae039","$8MBJY","Spinner","selector","buttonRef","hidden","classList","add","remove","$c3e0c316354f8aa2$var$api","$c3e0c316354f8aa2$var$checkMovies","$1LeHf","$c3e0c316354f8aa2$var$_galleryContainer","$c3e0c316354f8aa2$var$_cardsTemplate","$c3e0c316354f8aa2$export$2e2bcd8739ae039","Gallery","container","template","currentQuery","fetchGenres","fetchTrendingMovies","movies","update","innerHTML","call","library","$8Seta","localStorageFilms","addItemsOnCurrentPage","$7MumP","addGalleryHandler","$6756f0db6f988caf$export$b21c1b4271bdbe93","$85dma","$6756f0db6f988caf$var$containerPag","$6756f0db6f988caf$var$pagination","$fc6Dh","$6756f0db6f988caf$var$spinner","$6756f0db6f988caf$var$fetchMovies","$6756f0db6f988caf$var$_fetchMovies","apply","_args","show","getPopularMovies","hide","renderCards","updateTotalItems","total_results","render","on"],"version":3,"file":"index.7c604b79.js.map"}