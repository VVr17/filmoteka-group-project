{"mappings":"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","sources":["src/index.js","src/js/classes/SearchingForm.js","<<jsx-config-pragma.js>>","src/js/searchingForm.js","src/js/gallery.js","src/js/classes/spinner.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\n\n//Anton's temporary test code----------------------------\n// import './js/temp/antonTempTest';\n//Anton's temporary test code----------------------------\n\nimport './js/classes/HeaderBtnHandler';\nimport './js/classes/Pagination';\nimport './js/classes/SearchingForm';\n\nimport './js/filter';\nimport './js/modal';\nimport './js/searchingForm';\nimport './js/gallery';\nimport './js/teamAccordion';\n","const axios = require('axios').default;\n\nexport default class SearchingForm {\n  #API_KEY = '1351fe1fee33f4dc7ca86c3a4fb4a61c';\n  #BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  #searchParams = {\n    params: {\n      api_key: this.#API_KEY,\n      query: '',\n      // page: 1,\n      include_adult: false,\n    },\n  };\n  constructor() {}\n\n  async searchMovies(query) {\n    try {\n      const response = await axios.get(this.#BASE_URL, this.#searchParams);\n      return response;\n    } catch (error) {\n      // console.error(error);\n    }\n  }\n\n  async getMovies(query, page) {\n    if (query) {\n      this.#searchParams.params.query = query;\n      this.#searchParams.params.page = page;\n    }\n    const response = await this.searchMovies();\n    console.log(response);\n    return response;\n  }\n}\n",null,"import SearchingForm from './classes/SearchingForm';\n\nconst searchingFormRef = document.querySelector('.search-form');\nconst inputRef = document.querySelector('.search-input');\n\nsearchingFormRef.addEventListener('submit', onSearchSubmit);\n\nconst formSearch = new SearchingForm();\n\nfunction onSearchSubmit(event) {\n  event.preventDefault();\n\n  let searchValue = inputRef.value;\n  searchValue.trim();\n\n  formSearch.searchMovies('Killer');\n  if (searchValue == '') {\n    searchingFormRef.dataset.message =\n      'Search attempt not successful. Please, enter movie name.';\n    //\n\n    setTimeout(() => {\n      searchingFormRef.dataset.message = '';\n    }, 5500);\n    return;\n  }\n\n  formSearch.getMovies(searchValue, 1);\n}\n","import Pagination from './classes/Pagination';\nimport ApiService from './classes/ApiService';\nimport GalleryHandler from './classes/GalleryHandler';\nimport Spinner from './classes/spinner';\nimport Gallery from './classes/Gallery';\nimport template from '../templates/movieCard.hbs';\nimport { localStorageFilms } from './classes/ModalBtn';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst containerGallery = document.querySelector('.js-gallery');\nconst gallery = new Gallery(containerGallery, template);\n\nconst containerPag = document.querySelector('.pag');\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner('.js-spinner');\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\npagination.on('aftermove', event => {\n  console.log(event.page);\n\n  fetchMovies(event.page);\n});\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    console.log(movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { apiService, gallery };\n","export default class Spinner {\n  constructor(selector) {\n    this.buttonRef = document.querySelector(selector);\n    this.hidden = true;\n  }\n\n  hide() {\n    this.buttonRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.buttonRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n"],"names":["parcelRequire","$bpxeT","default","$2e558ff012a5efa8$var$_API_KEY","WeakMap","$2e558ff012a5efa8$var$_BASE_URL","$2e558ff012a5efa8$var$_searchParams","$2e558ff012a5efa8$export$2e2bcd8739ae039","SearchingForm","$parcel$interopDefault","$8MQK7","this","params","api_key","$4KMWL","query","include_adult","key","$2TvXO","mark","_callee","response","$2e558ff012a5efa8$require$axios","get","_this","_ctx","sent","page","searchMovies","console","log","$76cabe092f013cd2$var$searchingFormRef","document","querySelector","$76cabe092f013cd2$var$inputRef","addEventListener","event","preventDefault","searchValue","value","trim","$76cabe092f013cd2$var$formSearch","dataset","message","setTimeout","getMovies","$f0689d5ef78736c7$export$2e2bcd8739ae039","$8MBJY","Spinner","selector","buttonRef","hidden","classList","add","remove","$bKaad","$7MumP","addGalleryHandler","$6756f0db6f988caf$var$containerGallery","$6756f0db6f988caf$export$b21c1b4271bdbe93","$gOExu","$85dma","$6756f0db6f988caf$var$containerPag","$6756f0db6f988caf$var$pagination","$fc6Dh","$6756f0db6f988caf$var$spinner","$6756f0db6f988caf$var$fetchMovies","$6756f0db6f988caf$var$_fetchMovies","apply","arguments","movies","_args","length","show","getPopularMovies","hide","renderCards","results","updateTotalItems","total_results","render","error","t0","$8Seta","localStorageFilms","saveItemsForArrayAfterReload","on"],"version":3,"file":"index.ae0ccffb.js.map"}