{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/classes/Gallery.js","src/js/classes/spinner.js","<<jsx-config-pragma.js>>"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\nimport './js/classes/Pagination';\n\nimport './js/buttonUp';\nimport './js/changeTheme';\nimport './js/gallery';\nimport './js/modal';\nimport './js/teamAccordion';\n","import ApiService from './classes/ApiService';\nimport Gallery from './classes/Gallery';\nimport GalleryHandler from './classes/GalleryHandler';\nimport { localStorageFilms } from './classes/ModalBtn';\nimport Pagination from './classes/Pagination';\nimport Spinner from './classes/spinner';\nimport template from '../templates/movieCard.hbs';\nimport { NOTIFY_UNCORRECT_SEARCH } from './utils/config';\nimport { containerGallery, containerPag, searchFormRef } from './utils/refs';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst gallery = new Gallery(containerGallery, template);\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner();\n\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\n\npagination.on('aftermove', event => {\n  if (!gallery.currentQuery) {\n    fetchMovies(event.page);\n  } else {\n    searchMovies(gallery.currentQuery, event.page);\n  }\n});\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    // console.log('Popular Movies:', movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchValue = e.target.elements.search.value.trim();\n  if (searchMovies(searchValue)) {\n    //Search form input clear\n    this.reset();\n  }\n}\n\nasync function searchMovies(query, page = 1) {\n  try {\n    const searchedMovies = await gallery.getQueryMovies(query, page);\n\n    if (!searchedMovies) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    if (searchedMovies.total_results === 0) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    console.log('Searched Movies:', searchedMovies);\n    gallery.renderCards(searchedMovies.results);\n\n    pagination.updateTotalItems(searchedMovies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction searchNotification(message) {\n  searchFormRef.dataset.message = message;\n\n  setTimeout(() => {\n    searchFormRef.dataset.message = '';\n  }, 4000);\n}\n\nexport { apiService, gallery };\n","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\nimport { headerRef } from '../utils/refs';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n  }\n\n  async getPopularMovies(page) {\n    this.genres = await api.fetchGenres();\n    const response = await api.fetchTrendingMovies(page);\n\n    return response.data;\n  }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    headerRef.scrollIntoView(top);\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n\n  async getQueryMovies(query, page = 1) {\n    this.currentQuery = query;\n\n    if (query === '') {\n      return;\n    }\n    const response = await api.getMoviesByName(query, page);\n    return response;\n  }\n\n  async getMovieDetails(id) {\n    if (!id) {\n      return;\n    }\n    const response = await api.fetchMoviesByID(id);\n    return response;\n  }\n}\n\nexport { checkMovies };\n","import { spinnerRef } from '../utils/refs';\n\nexport default class Spinner {\n  constructor() {\n    this.spinnerRef = spinnerRef;\n    this.hidden = true;\n  }\n\n  hide() {\n    this.spinnerRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.spinnerRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n",null],"names":["parcelRequire","$bpxeT","$c3e0c316354f8aa2$var$api","$bKaad","default","$c3e0c316354f8aa2$export$db62333b1da702b9","$1LeHf","$c3e0c316354f8aa2$var$_galleryContainer","WeakMap","$c3e0c316354f8aa2$var$_cardsTemplate","$c3e0c316354f8aa2$export$2e2bcd8739ae039","Gallery","container","template","$parcel$interopDefault","$8MQK7","this","currentQuery","genres","key","page","$2TvXO","mark","_callee","response","fetchGenres","_this","_ctx","sent","fetchTrendingMovies","data","movies","update","$4KMWL","innerHTML","call","library","$ikGeD","headerRef","scrollIntoView","top","$8Seta","localStorageFilms","addItemsOnCurrentPage","query","arguments","length","getMoviesByName","id","fetchMoviesByID","$f0689d5ef78736c7$export$2e2bcd8739ae039","$8MBJY","Spinner","spinnerRef","hidden","classList","add","remove","$7MumP","addGalleryHandler","$6756f0db6f988caf$export$b21c1b4271bdbe93","containerGallery","$85dma","$6756f0db6f988caf$var$pagination","$fc6Dh","containerPag","$6756f0db6f988caf$var$spinner","$6756f0db6f988caf$var$fetchMovies","$6756f0db6f988caf$var$_fetchMovies","apply","_args","show","getPopularMovies","hide","renderCards","results","updateTotalItems","total_results","goToPage","render","console","error","t0","$6756f0db6f988caf$var$searchMovies","$6756f0db6f988caf$var$_searchMovies","searchedMovies","getQueryMovies","$6756f0db6f988caf$var$searchNotification","$iqi4A","NOTIFY_UNCORRECT_SEARCH","log","message","searchFormRef","dataset","setTimeout","addEventListener","e","preventDefault","target","elements","search","value","trim","reset","on","event","saveItemsForArrayAfterReload"],"version":3,"file":"index.ddec2d8c.js.map"}