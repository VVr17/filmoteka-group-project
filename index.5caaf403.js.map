{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/classes/Gallery.js","src/js/classes/spinner.js","src/js/classes/Notify.js"],"sourcesContent":["// do not write code here\n// only import can be inserted\nimport './js/utils/handlebars-helpers';\nimport './js/classes/Pagination';\n\nimport './js/buttonUp';\nimport './js/changeTheme';\nimport './js/gallery';\nimport './js/modal';\nimport './js/teamAccordion';\n","import ApiService from './classes/ApiService';\nimport Gallery from './classes/Gallery';\nimport GalleryHandler from './classes/GalleryHandler';\nimport { localStorageFilms } from './classes/ModalBtn';\nimport Pagination from './classes/Pagination';\nimport Spinner from './classes/spinner';\nimport template from '../templates/movieCard.hbs';\nimport { NOTIFY_UNCORRECT_SEARCH } from './utils/config';\nimport { containerGallery, containerPag, searchFormRef } from './utils/refs';\nimport Notify from './classes/Notify';\n\nconst apiService = new ApiService();\nconst galleryHandler = new GalleryHandler();\ngalleryHandler.addGalleryHandler();\n\nconst gallery = new Gallery(containerGallery, template);\nconst pagination = new Pagination(containerPag);\nconst spinner = new Spinner();\n\nconst notify = new Notify();\n\nsearchFormRef.addEventListener('submit', onSearchFormSubmit);\n\npagination.on('aftermove', event => {\n  if (!gallery.currentQuery) {\n    fetchMovies(event.page);\n  } else {\n    searchMovies(gallery.currentQuery, event.page);\n  }\n});\n\nlocalStorageFilms.saveItemsForArrayAfterReload();\n\nfetchMovies();\n\nasync function fetchMovies(page = 1) {\n  spinner.show();\n  try {\n    const movies = await gallery.getPopularMovies(page);\n    spinner.hide();\n    // console.log('Popular Movies:', movies);\n    gallery.renderCards(movies.results);\n\n    pagination.updateTotalItems(movies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchValue = e.target.elements.search.value.trim();\n  if (searchMovies(searchValue)) {\n    //Search form input clear\n    this.reset();\n  }\n}\n\nasync function searchMovies(query, page = 1) {\n  try {\n    const searchedMovies = await gallery.getQueryMovies(query, page);\n\n    if (!searchedMovies) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    if (searchedMovies.total_results === 0) {\n      searchNotification(NOTIFY_UNCORRECT_SEARCH);\n      fetchMovies();\n      return;\n    }\n\n    console.log('Searched Movies:', searchedMovies);\n    notify.notifySuccess();\n    gallery.renderCards(searchedMovies.results);\n\n    pagination.updateTotalItems(searchedMovies.total_results);\n    pagination.goToPage(page);\n    pagination.render();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction searchNotification(message) {\n  searchFormRef.dataset.message = message;\n  notify.notifyFailure();\n\n  setTimeout(() => {\n    searchFormRef.dataset.message = '';\n  }, 4000);\n}\n\nexport { apiService, gallery };\n","import ApiService from './ApiService';\nimport CheckMovies from './CheckMovies';\nimport { localStorageFilms } from './ModalBtn';\nimport { headerRef } from '../utils/refs';\n\nconst api = new ApiService();\nconst checkMovies = new CheckMovies();\n\nexport default class Gallery {\n  #galleryContainer;\n  #cardsTemplate;\n\n  constructor(container, template) {\n    this.#galleryContainer = container;\n    this.#cardsTemplate = template;\n    this.currentQuery = '';\n    this.genres = null;\n  }\n\n  async getPopularMovies(page) {\n    this.genres = await api.fetchGenres();\n    const response = await api.fetchTrendingMovies(page);\n\n    return response.data;\n  }\n\n  renderCards(movies) {\n    checkMovies.update(movies, this.genres);\n    this.#galleryContainer.innerHTML = this.#cardsTemplate({\n      movies,\n      library: false,\n    });\n    headerRef.scrollIntoView(top);\n    localStorageFilms.addItemsOnCurrentPage(movies);\n  }\n\n  async getQueryMovies(query, page = 1) {\n    this.currentQuery = query;\n\n    if (query === '') {\n      return;\n    }\n    const response = await api.getMoviesByName(query, page);\n    return response;\n  }\n\n  async getMovieDetails(id) {\n    if (!id) {\n      return;\n    }\n    const response = await api.fetchMoviesByID(id);\n    return response;\n  }\n}\n\nexport { checkMovies };\n","import { spinnerRef } from '../utils/refs';\n\nexport default class Spinner {\n  constructor() {\n    this.spinnerRef = spinnerRef;\n    this.hidden = true;\n  }\n\n  hide() {\n    this.spinnerRef.classList.add('is-hidden');\n    this.hidden = true;\n  }\n\n  show() {\n    this.spinnerRef.classList.remove('is-hidden');\n    this.hidden = false;\n  }\n}\n","export default class Notify {\n  #MessageSuccess = 'Search result successfull!';\n  #MessageFailure =\n    'Search result not successfull. Enter the movie name and try again!';\n\n  constructor() {}\n\n  notifyFailure() {\n    if (!document.querySelector('.failure')) {\n      const notify = document.createElement('aside');\n      notify.classList.add('failure');\n      notify.innerHTML = `${this.#MessageFailure}`;\n\n      document.body.appendChild(notify);\n\n      setTimeout(() => {\n        document.body.removeChild(notify);\n      }, 4000);\n    }\n  }\n\n  notifySuccess() {\n    if (!document.querySelector('.success')) {\n      const notify = document.createElement('aside');\n      notify.classList.add('success');\n      notify.innerHTML = `${this.#MessageSuccess}`;\n\n      document.body.appendChild(notify);\n\n      setTimeout(() => {\n        document.body.removeChild(notify);\n      }, 4000);\n    }\n  }\n}\n"],"names":["parcelRequire","$6mZGd","$jkMrE","$a8683d1718c80364$var$api","default","$a8683d1718c80364$export$db62333b1da702b9","$8WKcv","$a8683d1718c80364$var$_galleryContainer","WeakMap","$a8683d1718c80364$var$_cardsTemplate","$bGr86","$5f0f9dbc150dcce1$var$_MessageSuccess","$5f0f9dbc150dcce1$var$_MessageFailure","$6nUKJ","addGalleryHandler","$7c59f4ec4043ce00$export$b21c1b4271bdbe93","async","page","this","genres","fetchGenres","fetchTrendingMovies","data","renderCards","movies","update","$parcel$interopDefault","innerHTML","call","library","headerRef","scrollIntoView","top","$cEPyp","localStorageFilms","addItemsOnCurrentPage","query","currentQuery","getMoviesByName","id","fetchMoviesByID","constructor","container","template","$g6yUq","containerGallery","$hMpod","$7c59f4ec4043ce00$var$pagination","$9M0Rn","containerPag","$7c59f4ec4043ce00$var$spinner","hide","spinnerRef","classList","add","hidden","show","remove","$7c59f4ec4043ce00$var$notify","notifyFailure","document","querySelector","notify","createElement","body","appendChild","setTimeout","removeChild","notifySuccess","$7c59f4ec4043ce00$var$fetchMovies","getPopularMovies","results","updateTotalItems","total_results","goToPage","render","error","console","$7c59f4ec4043ce00$var$searchMovies","searchedMovies","getQueryMovies","$7c59f4ec4043ce00$var$searchNotification","$hXrWV","NOTIFY_UNCORRECT_SEARCH","log","message","searchFormRef","dataset","addEventListener","e","preventDefault","target","elements","search","value","trim","reset","on","event","saveItemsForArrayAfterReload"],"version":3,"file":"index.5caaf403.js.map"}